name: Build and Test

on:
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight UTC
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  build:
    name: Android Emulator CI
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.1'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 9477386
          accept-android-sdk-licenses: true
          log-accepted-android-sdk-licenses: false
          packages: >-
            platform-tools
            platforms;android-30
            build-tools;30.0.3
            emulator
            system-images;android-30;google_apis;x86

      - name: Create Android Emulator
        run: |
          echo "no" | avdmanager create avd -n test_emulator -k "system-images;android-30;google_apis;x86" -d pixel

      - name: Start X virtual framebuffer (Xvfb)
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          Xvfb :0 &
          export DISPLAY=:0

      - name: Start Android Emulator (logging enabled)
        run: |
          set -x
          export DISPLAY=:0
          export PATH=$PATH:$ANDROID_HOME/emulator
          adb start-server
          emulator -avd test_emulator -no-audio -no-window -gpu swiftshader_indirect -no-snapshot-save -no-accel -no-boot-anim &

      - name: Wait for emulator to boot (blind wait)
        run: |
          echo "‚è≥ Giving the emulator 90 seconds to boot (no boot check)..."
          sleep 90

          
      - name: Check connected devices
        run: adb devices

      - name: Print Flutter doctor
        run: flutter doctor -v

      - name: Run unit tests
        run: flutter test

      - name: Run integration tests (verbose)
        run: flutter test integration_test/ --verbose

